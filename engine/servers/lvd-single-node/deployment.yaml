apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lvd-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - lvd.dyn.cloud.e-infra.cz
      secretName: lvd.dyn.cloud.e-infra.cz
  rules:
    - host: lvd.dyn.cloud.e-infra.cz
      http:
        paths:
          - pathType: ImplementationSpecific
            path: "/"
            backend:
              service:
                name: lvd
                port:
                  name: api
---
apiVersion: v1
kind: Service
metadata:
  name: lvd
spec:
  ports:
    - name: api
      port: 8000  # Adjusted port to match docker-compose
      protocol: TCP
      targetPort: 8000
  selector:
    application: lvd
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: lvd
  name: lvd
spec:
  replicas: 1
  selector:
    matchLabels:
      application: lvd
  template:
    metadata:
      labels:
        application: lvd
    spec:
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: lvd
        image: registry.gitlab.ics.muni.cz:443/482857/lvd:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8000  # Port as specified in docker-compose
        securityContext:
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        # Define resource requirements and limits for the container.
        resources:
          # Set resource requests (minimum required resources).
          limits:
            cpu: 2
            memory: 16Gi